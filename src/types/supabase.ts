// /src/types/supabase.ts
// This file is generated by running: npm run db:types
// Do not edit manually - it will be overwritten

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      accounts: {
        Row: {
          id: string
          household_id: string
          name: string
          type: 'cash' | 'current' | 'credit' | 'savings'
          initial_balance: number
          currency: string
          is_archived: boolean
          created_at: string
        }
        Insert: {
          id?: string
          household_id: string
          name: string
          type: 'cash' | 'current' | 'credit' | 'savings'
          initial_balance?: number
          currency?: string
          is_archived?: boolean
          created_at?: string
        }
        Update: {
          id?: string
          household_id?: string
          name?: string
          type?: 'cash' | 'current' | 'credit' | 'savings'
          initial_balance?: number
          currency?: string
          is_archived?: boolean
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "accounts_household_id_fkey"
            columns: ["household_id"]
            referencedRelation: "households"
            referencedColumns: ["id"]
          }
        ]
      }
      budget_periods: {
        Row: {
          id: string
          household_id: string
          month: string
        }
        Insert: {
          id?: string
          household_id: string
          month: string
        }
        Update: {
          id?: string
          household_id?: string
          month?: string
        }
        Relationships: [
          {
            foreignKeyName: "budget_periods_household_id_fkey"
            columns: ["household_id"]
            referencedRelation: "households"
            referencedColumns: ["id"]
          }
        ]
      }
      budgets: {
        Row: {
          id: string
          period_id: string
          category_id: string
          amount: number
          rollover_enabled: boolean
        }
        Insert: {
          id?: string
          period_id: string
          category_id: string
          amount?: number
          rollover_enabled?: boolean
        }
        Update: {
          id?: string
          period_id?: string
          category_id?: string
          amount?: number
          rollover_enabled?: boolean
        }
        Relationships: [
          {
            foreignKeyName: "budgets_period_id_fkey"
            columns: ["period_id"]
            referencedRelation: "budget_periods"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "budgets_category_id_fkey"
            columns: ["category_id"]
            referencedRelation: "categories"
            referencedColumns: ["id"]
          }
        ]
      }
      categories: {
        Row: {
          id: string
          household_id: string
          name: string
          kind: 'expense' | 'income'
          icon: string | null
          color: string | null
          position: number
        }
        Insert: {
          id?: string
          household_id: string
          name: string
          kind: 'expense' | 'income'
          icon?: string | null
          color?: string | null
          position?: number
        }
        Update: {
          id?: string
          household_id?: string
          name?: string
          kind?: 'expense' | 'income'
          icon?: string | null
          color?: string | null
          position?: number
        }
        Relationships: [
          {
            foreignKeyName: "categories_household_id_fkey"
            columns: ["household_id"]
            referencedRelation: "households"
            referencedColumns: ["id"]
          }
        ]
      }
      categorization_rules: {
        Row: {
          id: string
          household_id: string
          match_type: 'merchant_exact' | 'merchant_contains' | 'desc_contains'
          match_value: string
          category_id: string
          priority: number
          created_at: string
        }
        Insert: {
          id?: string
          household_id: string
          match_type: 'merchant_exact' | 'merchant_contains' | 'desc_contains'
          match_value: string
          category_id: string
          priority?: number
          created_at?: string
        }
        Update: {
          id?: string
          household_id?: string
          match_type?: 'merchant_exact' | 'merchant_contains' | 'desc_contains'
          match_value?: string
          category_id?: string
          priority?: number
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "categorization_rules_household_id_fkey"
            columns: ["household_id"]
            referencedRelation: "households"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "categorization_rules_category_id_fkey"
            columns: ["category_id"]
            referencedRelation: "categories"
            referencedColumns: ["id"]
          }
        ]
      }
      household_members: {
        Row: {
          household_id: string
          user_id: string
          role: 'owner' | 'editor' | 'viewer'
          joined_at: string
        }
        Insert: {
          household_id: string
          user_id: string
          role?: 'owner' | 'editor' | 'viewer'
          joined_at?: string
        }
        Update: {
          household_id?: string
          user_id?: string
          role?: 'owner' | 'editor' | 'viewer'
          joined_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "household_members_household_id_fkey"
            columns: ["household_id"]
            referencedRelation: "households"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "household_members_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      households: {
        Row: {
          id: string
          name: string
          base_currency: string
          created_at: string
        }
        Insert: {
          id?: string
          name: string
          base_currency?: string
          created_at?: string
        }
        Update: {
          id?: string
          name?: string
          base_currency?: string
          created_at?: string
        }
        Relationships: []
      }
      transaction_categories: {
        Row: {
          transaction_id: string
          category_id: string
          weight: number
        }
        Insert: {
          transaction_id: string
          category_id: string
          weight?: number
        }
        Update: {
          transaction_id?: string
          category_id?: string
          weight?: number
        }
        Relationships: [
          {
            foreignKeyName: "transaction_categories_transaction_id_fkey"
            columns: ["transaction_id"]
            referencedRelation: "transactions"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "transaction_categories_category_id_fkey"
            columns: ["category_id"]
            referencedRelation: "categories"
            referencedColumns: ["id"]
          }
        ]
      }
      transactions: {
        Row: {
          id: string
          household_id: string
          account_id: string | null
          user_id: string | null
          occurred_at: string
          description: string | null
          merchant: string | null
          currency: string
          amount: number
          direction: 'outflow' | 'inflow'
          attachment_url: string | null
          created_at: string
        }
        Insert: {
          id?: string
          household_id: string
          account_id?: string | null
          user_id?: string | null
          occurred_at?: string
          description?: string | null
          merchant?: string | null
          currency?: string
          amount: number
          direction: 'outflow' | 'inflow'
          attachment_url?: string | null
          created_at?: string
        }
        Update: {
          id?: string
          household_id?: string
          account_id?: string | null
          user_id?: string | null
          occurred_at?: string
          description?: string | null
          merchant?: string | null
          currency?: string
          amount?: number
          direction?: 'outflow' | 'inflow'
          attachment_url?: string | null
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "transactions_household_id_fkey"
            columns: ["household_id"]
            referencedRelation: "households"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "transactions_account_id_fkey"
            columns: ["account_id"]
            referencedRelation: "accounts"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "transactions_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
    }
    Views: {
      v_account_balances: {
        Row: {
          account_id: string
          household_id: string
          name: string
          type: string
          initial_balance: number
          currency: string
          current_balance: number
          transaction_count: number
          last_transaction_at: string | null
        }
        Relationships: []
      }
      v_monthly_category_summary: {
        Row: {
          household_id: string
          month: string
          category_id: string
          category_name: string
          category_kind: string
          icon: string | null
          color: string | null
          budget: number
          spent: number
          earned: number
          remaining: number
          budget_percentage: number
          transaction_count: number
          rollover_enabled: boolean | null
        }
        Relationships: []
      }
      v_recent_transactions: {
        Row: {
          id: string
          household_id: string
          account_id: string | null
          account_name: string | null
          user_id: string | null
          occurred_at: string
          description: string | null
          merchant: string | null
          amount: number
          direction: string
          currency: string
          attachment_url: string | null
          created_at: string
          categories: Json[] | null
          primary_category_name: string
          primary_category_icon: string
        }
        Relationships: []
      }
      v_simple_burn_rate: {
        Row: {
          household_id: string
          month: string
          spent: number
          budget: number
          remaining: number
          daily_average: number
          daily_burn_rate: number
          projected_monthly_spend: number
          remaining_days: number
          suggested_daily_spend: number
        }
        Relationships: []
      }
    }
    Functions: {
      is_household_member: {
        Args: {
          h_id: string
        }
        Returns: boolean
      }
      has_editor_rights: {
        Args: {
          h_id: string
        }
        Returns: boolean
      }
    }
    Enums: {
      [_ in never]: never
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}